version: '3.4'

services:

  #PHP Service
  app:
    build:
      context: .docker
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - .docker/log/horizon/horizon.log:/var/www/html/horizon.log
    depends_on:
      - mysql
      - redis
      - laravel_echo_server
    networks:
      - chatapp

  #Nginx Service
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./:/var/www/html
      - .docker/log/nginx:/var/log/nginx
      - .docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - chatapp

  # DB UI management service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.1.0
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpass
    ports:
      - ${PHPMYADMIN_PORT}:80
    networks:
      - chatapp

  #MySQL Service
  mysql:
    image: mysql:5.7.22
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - .docker/data/mysql:/var/lib/mysql/
    networks:
      - chatapp

  laravel_echo_server:
    build:
      context: .docker/laravel-echo-server
      dockerfile: Dockerfile
    volumes:
      - .env:/app/.env
    restart: unless-stopped
    networks:
      - chatapp

  redis:
    image: redis:5-alpine
    volumes:
      - .docker/data/redis:/data
    restart: unless-stopped
    networks:
      - chatapp
networks:
  chatapp:
    name: chatapp
    driver: bridge
